s <- c()
x <- 100
for (i in 1:100) {
abs(0.41-(0.4^i)*(0.6^(x-i))) > abs(0.41- 0.5^x)
}
s <- c()
x <- 100
for (i in 1:100) {
s[i] = abs(0.41-(0.4^i)*(0.6^(x-i))) - abs(0.41- 0.5^x)
}
s
abs(0.41-(0.4^1)*(0.6^(99)))
abs(0.41-(0.4^2)*(0.6^(98)))
0.41-(0.4^2)*(0.6^(98))
0.41-(0.4^1)*(0.6^(95))
(0.6^(95))
float(0.41)
as.float(0.41)
as.double(0.41)
as.double(0.41)-(0.4^1)*(0.6^(95))
le0.41
le(0.41)
1e0.41
1e(0.41)
abs(1e0.41-(0.4^2)*(0.6^(98)) )
0.4e-20
0.4e-20*10^20
(0.5)^1000
(0.4)^500 * (0.6)^500
(0.5)^1000 > (0.4)^500 * (0.6)^500
(0.5)^10000 > (0.4)^5000 * (0.6)^5000
(0.5)^100000 > (0.4)^50000 * (0.6)^50000
(0.5)^10 > (0.4)^5 * (0.6)^5
(0.5)^10000000 > (0.4)^5000000 * (0.6)^5000000
(0.5)^100000000 > (0.4)^50000000 * (0.6)^50000000
(0.5)^10 > (0.4)^5 * (0.6)^5
(0.5)^100 > (0.4)^50 * (0.6)^50
x <- "c"
switch(x, a=1, b=2)
x <- "a"
switch(x, a=1, b=2)
x <- "a"
l <- switch(x, a=1, b=2)
l
x <- "a\c"
x <- "c"
l <- switch(x, a=1, b=2)
l
x <- list(1:3, 4:6, 7:9)
vapply(x, sum, numeric(1))
x <- list(1:3, 4:6, 7:9)
vapply(x, sum, numeric(2))
vapply(x, sum, numeric())
x <- list(1:3, 4:6, 7:9)
vapply(x, sum, numeric())
vapply(x, sum, numeric(1))
vapply(x, sum, chracter(1))
vapply(x, sum, character(1))
x <- list(1:3, 4:6, 7:9)
vapply(x, sum, character(1))
vapply(x, sum, int(1))
vapply(x, sum, integer(1))
vapply(x, sum, list(1))
vapply(x, sum, list())
library(ggplot2)
g <- ggplot(mpg, aes(displ, hwy))
g + geom_point(alpha=1/3) + facet_grid(cyl~class)
g + geom_point(alpha=1/3) + facet_wrap(cyl~class)
ggplot(data=mpg) + geom_histogram(mapping=aes(x=hwy))
ggplot(data=mpg) + geom_histogram(mapping=aes(x=hwy, y=..density..))
ggplot(data=mpg) + geom_histogram(mapping=aes(x=hwy, y=..prop..))
ggplot(data=mpg) + geom_histogram(mapping=aes(x=drv, y=..prop..))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, y=..prop.., group=1))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, y=..prop..))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, y=..prop.., group=1))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, y=..prop.., group=2))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, y=..prop.., group=drv))
ggplot(data=mpg) + geom_bar(mapping=aes(x=drv, y=..prop..))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, y=..prop.., group="foo")
)
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, y=..prop.., group=1))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, y=..prop.., group=drv))
ggplot(data=mpg) + geom_bar(mapping=aes(x=drv, y=..prop..))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, y=..prop.., group="foo")
)
geom_bar(mapping=aes(x=drv, fill=class, y=..count..) ggtitle("Explicit y")
geom_bar(mapping=aes(x=drv, fill=class, y=..count..) + ggtitle("Explicit y")
geom_bar(mapping=aes(x=drv, fill=class, y=..count..) + ggtitle("Explicit y")
geom_bar(mapping=aes(x=drv, fill=class, y=..count..) + ggtitle("Explicit y")
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, fill=class, y=..count..)) +
ggtitle("Explicit y")
ggplot(data=mpg) + geom_bar(mapping=aes(x=drv)) + ggtitle("Implicit y")
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, y=..prop.., group="foo")
)
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, fill=class, y=..count..)) +
ggtitle("Explicit y")
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, y=..count..)) +
ggtitle("Explicit y")
ggplot(data=mpg) + geom_bar(mapping=aes(x=drv)) + ggtitle("Implicit y")
g <- ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, group=class, y=..count..
)+
))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, group=class, y=..count..))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, fill=class, y=..count..)) +
ggtitle("Explicit y")
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, group=class, y=..count..))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, fill=class, y=..count..)) +
ggtitle("Explicit y")
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv, group=class, y=..count..))
ggplot(data=mpg) +
geom_bar(mapping=aes(x=drv,y=..count..)) +
ggtitle("Explicit y")
ggplot(data=mpg) + stat_smooth(aes(x=displ, y=hwy),
geom="smooth")
ggplot(data=mpg) + stat_smooth(aes(x=displ, y=hwy))
ggplot(data=mpg) + stat_smooth(aes(x=displ, y=hwy),
geom="line")
drive <- data.frame(type = c("four wheel", "front wheel", "rear wheel"),
count = c(sum(mpg$drv == "4"), sum(mpg$drv == "f"),
sum(mpg$drv == "r")))
ggplot(drive) + geom_bar(mapping=aes(x=type, y=count), stat="identity")
ggplot(drive) + geom_bar(mapping=aes(x=type, y=count), stat="count")
ggplot(drive) + geom_bar(mapping=aes(x=type, y=count))
ggplot(data = mpg, aes(x = 1, fill=class)) + geom_bar()
ggplot(data = mpg, aes(x = 1, fill=class)) + geom_bar() +  coord_polar(theta="y")
ggplot(data = mpg, aes(x = class)) + geom_bar()
ggplot(data = mpg, aes(x = class)) + geom_bar() + coord_polar(theta="y")
ggplot(data = mpg, aes(x = 1, fill=class)) + geom_bar(width=1)
ggplot(data = mpg, aes(x = 1, fill=class)) + geom_bar(width=1) +
coord_polar(theta="y")
ggplot(data = mpg, aes(x = 1, fill=class)) + geom_bar() +  coord_polar(theta="y")
ggplot(data = mpg, aes(x = 1, fill=class)) + geom_bar(width=1)
ggplot(data = mpg, aes(x = 1, fill=class)) + geom_bar()
ggplot(mpg, aes(x=displ, y=hwy)) + geom_point() +
facet_wrap(~ drv + cyl)
ggplot(mpg, aes(x=displ, y=hwy)) + geom_point() +
facet_gird(~ drv + cyl)
ggplot(mpg, aes(x=displ, y=hwy)) + geom_point() +
facet_grid(~ drv + cyl)
ggplot(mpg, aes(x=displ, y=hwy)) + geom_point() +
facet_wrap(~ drv + cyl)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
ggplot(mpg, aes(x=displ, y=hwy)) + geom_point() +
facet_wrap(~ drv + cyl)
mpg$drv
mpg$cyl
ggplot(mpg, aes(x=displ, y=hwy)) + geom_point() +
facet_grid(cyl ~ drv)
ggplot(mpg, aes(x=displ, y=hwy)) + geom_point() +
facet_grid(~ drv + cyl)
ggplot(mpg, aes(x=displ, y=hwy)) + geom_point() +
facet_grid(cyl ~ drv)
mpg$cty
cut_number(mpg$cty)
cut_number(mpg$cty,3)
library(tidyverse)
near(3)
near(3,1)
near(3,3.3)
near(3,3.1111)
near(3,3.0000001111)
near(3,3.000000)
sqrt(2) ^ 2 == 2
sqrt(2) ^ 2
near(sqrt(2) ^ 2, 2)
filter(flights, carrier %in% c("AS", "HA"))
library(nycflights13)
filter(flights, carrier %in% c("AS", "HA"))
flights[,c("tailnum", "flight")]
flights[,-c("tailnum", "flight")]
12/6*2
log4(3)
log(3)
lead(1:10, 1)
lead(1:10, 2)
lag(1:10, 1)
lead(1:10, 1)
cumsum(1:10)
cumprod(1:10)
cummax(1:10)
cummean(1:10)
mean(1:4)
mean(1:5)
IQR(1:10)
mad(1:10)
quantile(1:10)
summarise(flights, sum(is.na(air_time)) / n())
summarise(flights, mean(is.na(air_time)))
summarise(group_by(flights, carrier), n())
diamonds$color
diamonds <- mutate(diamonds, color=ordered(color,
levels=rev(levels(color))))
diamonds$color
diamonds %>% group_by(cut) %>% summarise(n=n())
diamonds %>% count(cut)
ggplot(diamonds) + geom_histogram(aes(x = price))
cut_number(1:10,3)
cut_interval(1:10,3)
cut_interval(1:10,n=4)
cut_number(1:10,n=4)
ggplot(diamonds) + geom_freqpoly(aes(x=price))
, color=cut
ggplot(diamonds) + geom_freqpoly(aes(x=price, color=cut))
ggplot(diamonds, aes(x=carat, y=price)) + geom_boxplot(aes(group=cut_width(carat, 0.2)))
ggplot(diamonds, aes(x=carat, y=price)) + geom_boxplot()
cut_width(diamonds$carat, 0.2)
diamonds %>% count(color, cut) %>%
ggplot(aes(x=cut, y=color)) + geom_tile(aes(fill=n))
diamonds %>% count(color, cut)
ggplot(diamonds) + geom_bar(aes(x=cut, y=..prop.., fill=color),
position="dodge")
ggplot(diamonds) + geom_bar(aes(x=cut, y=..prop.., fill=color, group=color),
position="dodge")
ggplot(diamonds) + geom_bar(aes(x=cut, y=..prop.., fill=color, group=color),
position="stack")
ggplot(diamonds) + geom_bar(aes(x=cut, y=..prop.., fill=color),
position="stack")
ggplot(diamonds) + geom_bar(aes(x=color, y=..prop.., group=cut))
ggplot(diamonds) + geom_bar(aes(x=color, y=..prop..)) +
facet_wrap(~ cut)
ggplot(diamonds) + geom_bar(aes(x=color, y=..prop.., group=cut)) +
facet_wrap(~ cut)
tmp <- read_csv("a,b,c\n1,2,3\n4,5,6", col_types = cols(b=col_character(),
c=col_character()))
tmp
challenge <- read_csv(readr_example("challenge.csv"))
challenge
problems(challenge)
challenge[which(!is.na(challenge$y)),]
classes <- tibble(student = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), year = c(1,2,1,1,2,3,3,4,4,3), algrthm = c(1, 1, 1, 0, 0, 0, 1, 1, 1, 1), datastr = c(1, 0, 0, 1, 0, 1, 0, 0, 0, 0), opersys = c(0, 0, 0, 0, 1, 1, 1, 0, 0, 1), prglang = c(0, 1, 0, 0, 1, 1, 1, 0, 0, 0))
classes
classes2 <- classes %>% gather(key="class", value="is_enrolled",
algrthm, datastr, opersys, prglang)
classes2
classes %>% gather(key="class", value="is_enrolled",
algrthm, datastr, opersys, prglang) %>% filter(is_enrolled == 1)
classes %>% gather(key="class", value="is_enrolled",
algrthm, datastr, opersys, prglang) %>% filter(is_enrolled == 1) %>% select(-is_enrolled)
pets2 <- tribble(~name, ~is_cat, ~is_dog, "Daisy", "yes", "no",
"Johnny", "yes", "no",
"Patsy", "yes", "no",
"Yuma", "no", "yes")
pets2
pets2 %>% gather(key="spec", value="binary", 'is_cat', 'is_dog')
pets2 %>%
gather(key="species", value="is_it", is_cat, is_dog)
pets2 %>%
gather(key="species", value="is_it", is_cat, is_dog) %>% filter(is_it == "yes")
planes
planes %>% count(tailnum)
flights
flights %>%
count(year, month, day, flight)
flights
flights %>%
count(year, month, day, flight, carrier) %>% filter(n > 1)
flights %>%
count(year, month, day, flight, carrier) %>% filter(n > 1)
x <- tribble( ~key, ~val_x,
1, "x1",
2, "x2",
3, "x3"
)
y <- tribble(
~key, ~val_y, 1, "y1",
2, "y2",
4, "y3" )
x
y
x %>% rename(a = key)
y2 <- y %>% rename(b = key)
y2
flights %>%
filter(dest != "HNL", dest != "ANC") %>% count(dest) %>%
left_join(airports, by = c("dest" = "faa")) %>% ggplot(aes(lon, lat, size=n, color=n)) + borders("state") +
geom_point() +
coord_quickmap()
flights %>%
filter(dest != "HNL", dest != "ANC") %>% count(dest) %>%
left_join(airports, by = c("dest" = "faa")) %>% ggplot(aes(lon, lat, size=n, color=n))  +
geom_point() +
coord_quickmap()
flights %>%
filter(dest != "HNL", dest != "ANC") %>% count(dest) %>%
left_join(airports, by = c("dest" = "faa")) %>% ggplot(aes(lon, lat, size=n, color=n)) + borders("state") +
geom_point() +
coord_quickmap()
planes
print("a\nb")
print("a/nb")
cat("a/nb")
cat("a\nb")
cat("'Or include a "quote" the other way around'")
cat('Or include a "quote" the other way around')
print('Or include a "quote" the other way around')
cat("\u200b")
cat("\u200b")
print("\u200b")
print("\u03c0")
nchar("abc", type="width")
nchar("/nabc", type="width")
car("/nabc", type="width")
cat("/nabc", type="width")
cat("/nabc")
cat("\nabc")
nchar("\nabc", type="width")
library(stringr)
str_locate("a_1b_c_d")
str_locate("a_1b_c_d", "_")
str_locate_all("a_1b_c_d", "_")
str_split("a_1b_c_d", "_")
str_split_fixed("a_1b_c_d", "_")
str_split("a_1b_c_d", "_", n=2)
str_detect(c("hello", "hi", "hey", "well met"), "h")
str_locate(c("hello", "hi", "hey", "well met"), "h")
str_split(c("hello", "hi", "hey", "well met"), "h")
words
seq_along(words)
seq_along(1:10)
seq_along(c(a,b))
seq_along(c(1,2))
str_pad("a", n=10, side="both")
str_pad("a",10, side="both")
nchar(str_pad("a",10, side="both"))
month_levels <- c(
"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
)
ordered(c("Sep", "Apr", "Jun", "Nov"), levels=month_levels)
fct <- c("C", "B", "A") factor(fct)
fct <- c("C", "B", "A")
factor(fct)
unique(fct)
str(unique(fct))
factor(fct, levels=(fct))
fct_inorder(factor(fct))
library(forcats)
fct_inorder(factor(fct))
datetime <- ymd_hms("2018-02-09 12:34:56")
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
datetime <- ymd_hms("2018-02-09 12:34:56")
day(datetime)
datetime <- ymd_hms("2018-02-09 12:34:56", tz="UTC")
day(datetime)
mday(datetime)
library(nycflights13)
flights$dep_time
1500 %/% 100
1500 %% 100
library(devtools)
install_github("Gibbsdavidl/CatterPlots")
library(CatterPlots)
x <- -10:10
y <- -x^2 + 10
purr <- catplot(xs=x, ys=y, cat=3, catcolor='#000000FF')
cats(purr, -x, -y, cat=4, catcolor='#FF0000')
ggplot(mpg, aes(x=manufacturer)) + layer(geom = "bar",
stat = "count",
position = "identity") + coord_flip()
library(tidyverse)
ggplot(mpg, aes(x=manufacturer)) + layer(geom = "bar",
stat = "count",
position = "identity") + coord_flip()
ggplot(mpg, aes(x=manufacturer)) + layer(geom = "bar",
stat = "count",
position = "stack") + coord_flip()
mpg$displ
ggplot(mpg, aes(x=displ, y=cty)) + layer(geom = "point",
stat = "identity",
position = "jitter") + layer(geom = "line",
stat = "smooth",
position = "identity",
params=list(method="auto", formula=y~x, se=FALSE))
ggplot(mpg, aes(x=displ, y=cty)) + layer(geom = "point",
stat = "identity",
position = "jitter") + layer(geom = "line",
stat = "identity",
position = "identity",
params=list(method="auto", formula=y~x, se=FALSE))
ggplot(mpg, aes(x=displ, y=cty)) + layer(geom = "point",
stat = "identity",
position = "jitter") + layer(geom = "line",
stat = "smooth",
position = "identity",
params=list(method="auto", formula=y~x, se=FALSE))
ggplot(mpg, aes(x=displ, y=cty)) + layer(geom = "point",
stat = "identity",
position = "jitter") + layer(geom = "smooth",
stat = "smooth",
position = "identity",
params=list(method="auto", formula=y~x, se=FALSE))
ggplot(mpg, aes(x=displ, y=cty)) + layer(geom = "point",
stat = "identity",
position = "jitter") + layer(geom = "line",
stat = "smooth",
position = "identity",
params=list(method="auto", formula=y~x, se=FALSE))
library(ggplot2)
str(diamonds)
library(tidyverse)
str(diamonds)
d <- diamonds[1:20,c("color","x")]
d
library("modelr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
model_matrix(d, x~color)
model_matrix(d, color~x)
unique(d$color)
setwd("~/Downloads/Bike-Sharing-Dataset")
bike <- read.csv("day.csv")
train <- bike[1:500,3:14]
dim(train)
test <- bike[-(1:500),3:14]
dim(test)
library(lubridate)
warning(bike$dteday <- as.POSIXlt(bike$dteday, "%Y-%m-%d"))
lin <- lm(cnt~., train)
prd <- predict(lin, test[,-12])
sqrt(mean(((prd-test[,12])^2)))
mean(abs(prd-test[,12]))
train
dim(train)
names(train)
setwd("~/Downloads/Bike-Sharing-Dataset")
bike <- read.csv("day.csv")
names(bike)
bike <- bike[,-c(1,2,14,15)]
names(bike)
library(caret)
setwd("~/Downloads/Bike-Sharing-Dataset")
bike <- read.csv("day.csv")
names(bike)
bike <- bike[,-c(1,14,15)]
names(bike)
createDataPartition(bike$cnt)
createDataPartition(bike$cnt, p=0.75)
train_ind <- createDataPartition(bike$cnt, p=0.75)
length(train_ind)
length(train_ind$Resample1)
train_ind <- createDataPartition(bike$cnt, p=0.75)$Resample1
length(train_ind)
train_ind <- createDataPartition(bike$cnt, p=0.75)$Resample1
train <- bike[train_ind, ]
test <- bike[-train_ind, ]
dim(train)
dim(test)
lin <- lm(cnt~., train)
prd <- predict(lin, test[,-13])
lin <- lm(cnt~., train[-1,])
prd <- predict(lin, test[-1,-13])
lin <- lm(cnt~., train[,-1])
prd <- predict(lin, test[,c(-1,-13)])
prd <- predict(lin, test[,c(-1,-13)])
install.packages("Metrics")
library("Metrics")
sqrt(mean(((prd-test[,13])^2)))
rmse(prd, test[,13])
mean(abs(prd-test[,12]))
mae(prd, test[,13])
mean(abs(prd-test[,12]))
mean(abs(prd-test[,13]))
rmse(prd, test[,13])
mae(prd, test[,13])
library(randomForest)
lin <- randomForest(cnt~., train[,-1])
prd <- predict(lin, test[,c(-1,-13)])
rmse(prd, test[,13])
mae(prd, test[,13])
library(e1071)
lin <- svm(cnt~., train[,-1])
prd <- predict(lin, test[,c(-1,-13)])
rmse(prd, test[,13])
mae(prd, test[,13])
lin <- neuralnet(cnt~season+yr+mnth+holiday+weekday+workingday +
weathersit+temp+atemp+hum+windspeed, data= train, hidden = 10)
library(neuralnet)
lin <- neuralnet(cnt~season+yr+mnth+holiday+weekday+workingday +
weathersit+temp+atemp+hum+windspeed, data= train, hidden = 10)
prd <- predict(lin, test[,c(-1,-13)])
rmse(prd, test[,13])
mae(prd, test[,13])
range(prd)
lin <- neuralnet(cnt~season+yr+mnth+holiday+weekday+workingday +
weathersit+temp+atemp+hum+windspeed, data= train, hidden = 30)
prd <- predict(lin, test[,c(-1,-13)])
rmse(prd, test[,13])
mae(prd, test[,13])
lin <- neuralnet(cnt~season+yr+mnth+holiday+weekday+workingday +
weathersit+temp+atemp+hum+windspeed, data= train, hidden = 5)
prd <- predict(lin, test[,c(-1,-13)])
rmse(prd, test[,13])
mae(prd, test[,13])
lin
rmse(prd, test[,13])
mae(prd, test[,13])
